plugins {
    id 'java'
    id 'application' // 添加 application 插件
    id 'maven-publish' // 用于发布到Maven仓库
}

group = 'ovo.baicaijun'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.eclipse.jetty:jetty-server:9.4.44.v20210927'
    implementation 'org.eclipse.jetty.websocket:websocket-server:9.4.44.v20210927'
    implementation 'org.eclipse.jetty.websocket:websocket-servlet:9.4.44.v20210927'
    implementation 'org.eclipse.jetty:jetty-servlet:9.4.44.v20210927'
    implementation 'org.json:json:20210307'
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation 'org.yaml:snakeyaml:1.33' // 添加 snakeyaml 依赖
//    // Jieba分词库
//    implementation 'com.huaban:jieba-analysis:1.0.2'
//
//    // MongoDB Java驱动
//    implementation 'org.mongodb:mongodb-driver-sync:4.4.0'
}

application {
    mainClass = 'ovo.baicaijun.ShirokoBot.Main' // 指定主类
}
jar {
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // 设置重复文件处理策略
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId = 'ovo.baicaijun'
            artifactId = 'shirokobot'
            version = '1.0-SNAPSHOT'

            pom {
                name = 'ShirokoBot'
                description = 'ShirokoBot By:BaicaijunOvO'
                url = 'https://github.com/BaicaijunOvO/ShirokoBot'
                licenses {
                    license {
                        name = 'Apache License'
                        url = 'https://www.apache.org/licenses/'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = 'ShirokoNexus'
            def baseUrl = project.nexusUrl
            def releasesUrl = "${baseUrl}/repository/maven-releases/"
            def snapshotsUrl = "${baseUrl}/repository/maven-snapshots/"
            url = project.isRelease.toBoolean() ? releasesUrl : snapshotsUrl
            allowInsecureProtocol = true // 如果使用HTTP

            credentials {
                username = project.nexusUsername
                password = project.nexusPassword
            }
        }
    }
}

test {
    useJUnitPlatform()
}